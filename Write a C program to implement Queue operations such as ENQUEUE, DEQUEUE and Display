#include <stdio.h>
#include <stdlib.h>
#define MAX 100
typedef struct 
{
    int items[MAX];
    int front;
    int rear;
}
Queue;
void initQueue(Queue *q)
{
    q->front = -1;
    q->rear = -1;
}
int isFull(Queue *q)
{
    if (q->rear == MAX - 1) return 1;
    return 0;
}
int isEmpty(Queue *q)
{
    if (q->front == -1 || q->front > q->rear) return 1;
    return 0;
}
void enqueue(Queue *q, int value)
{
    if (isFull(q)) 
{
        printf("Queue is full!\n");
        return;
    }
    if (q->front == -1) q->front = 0;
    q->items[++q->rear] = value;
    printf("Enqueued %d\n", value);
}
int dequeue(Queue *q)
{
    int item;
    if (isEmpty(q)) 
{
        printf("Queue is empty!\n");
        return -1;
    }
    item = q->items[q->front++];
    if (q->front > q->rear)
{
        q->front = q->rear = -1;  
    }
    printf("Dequeued %d\n", item);
    return item;
}
void display(Queue *q)
{
    int i;
    if (isEmpty(q)) 
{
        printf("Queue is empty!\n");
    }
else 
{
        printf("Queue elements are:\n");
        for (i = q->front; i <= q->rear; i++) {
            printf("%d ", q->items[i]);
        }
        printf("\n");
    }
}
int main() {
    Queue q;
    int choice, value;   
    initQueue(&q);
    while(1) {
        printf("\nQueue Operations:\n");
        printf("1. Enqueue\n");
        printf("2. Dequeue\n");
        printf("3. Display\n");
        printf("4. Exit\n");
        printf("Enter your choice: ");
        scanf("%d", &choice);        
        switch(choice) 
{
            case 1:
                printf("Enter the value to enqueue: ");
                scanf("%d", &value);
                enqueue(&q, value);
                break;
            case 2:
                dequeue(&q);
                break;
            case 3:
                display(&q);
                break;
            case 4:
                exit(0);
            default:
                printf("Invalid choice!\n");
        }
    }   
    return 0;
}
